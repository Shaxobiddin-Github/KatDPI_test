# TEST TIZIMI TUSHUNTIRISH

## 1. TIZIM HAQIDA UMUMIY MA'LUMOT
Bu tizim o'quv muassasalari uchun test sinovlarini yaratish, o'tkazish va nazorat qilish imkonini beradi. Tizimda bir nechta rol mavjud bo'lib, har bir rolning o'z vazifalari va imkoniyatlari bor.

## 2. ROLLAR VA ULARNING VAZIFALARI

### 2.1 Admin
- Tizimning eng yuqori huquqli foydalanuvchisi
- Barcha rollarni boshqarish
- Tizimning umumiy sozlamalarini o'zgartirish
- Barcha ma'lumotlarni ko'rish va tahrirlash

### 2.2 Controller (Nazoratchi)
- Test yaratish va boshqarish
- Testlarni guruh, kafedra yoki bo'limga biriktirish
- Test natijalarini ko'rish va tahlil qilish
- Test parametrlarini belgilash (vaqt, ball, savol soni)

### 2.3 O'qituvchi
- Savol yaratish va tahrirlash
- O'z fanlariga oid savollarni ko'rish
- Test natijalarini ko'rish (faqat o'z fanlari bo'yicha)

### 2.4 Talaba
- Belgilangan testlarni topshirish
- O'z natijalarini ko'rish
- Test tarixini ko'rish

### 2.5 Tutor
- Kafedra doirasida testlarni ko'rish
- Natijalarni tahlil qilish
- Hisobotlarni ko'rish

### 2.6 Xodim (Employee)
- Bo'lim doirasida testlarni ko'rish
- Bo'lim bo'yicha natijalarni ko'rish

## 3. ASOSIY FUNKSIONALLIKLAR

### 3.1 Test yaratish (Controller uchun)
1. Test yaratish oynasi (/api/controller-panel/add-test/):
   - Guruh/Kafedra/Bo'lim tanlash
   - Fan tanlash (tanlangan guruh/kafedra/bo'limga tegishli fanlar filtirlanadi)
   - Test parametrlarini kiritish:
     * Savollar soni
     * Umumiy ball
     * Test vaqti (daqiqa)
     * Test muddati
   
2. Test yaratishdagi filterlar:
   - Guruh tanlanganda: shu guruhga tegishli fanlar ko'rsatiladi (GroupSubject modelidan)
   - Kafedra tanlanganda: shu kafedraga tegishli fanlar ko'rsatiladi
   - Bo'lim tanlanganda: shu bo'limga tegishli fanlar ko'rsatiladi

### 3.2 Savol qo'shish (O'qituvchi uchun)
1. Savol qo'shish oynasi (/api/teacher-panel/add-question/):
   - Fan tanlash (o'qituvchiga biriktirilgan fanlar)
   - Savol turini tanlash:
     * Bitta to'g'ri javob
     * Ko'p to'g'ri javob
     * Bo'sh joyni to'ldirish
     * Jumlalarni tartiblash
     * To'g'ri/Yolg'on
     * Moslashtirish
   - Savol matni
   - Javob variantlari
   - Rasm (ixtiyoriy)

2. Savol qo'shishdagi filterlar:
   - Faqat o'qituvchiga biriktirilgan fanlar ko'rsatiladi
   - Savol turi tanlanganda tegishli javob kiritish shakli ko'rsatiladi

### 3.3 Test topshirish (Talaba uchun)
1. Test topshirish jarayoni:
   - Faol testlar ro'yxatini ko'rish
   - Testni boshlash
   - Savollarni ketma-ket yechish
   - Test vaqti tugashini kuzatish
   - Javoblarni saqlash
   - Testni yakunlash

2. Test natijalarini ko'rish:
   - To'plangan ball
   - To'g'ri/noto'g'ri javoblar soni
   - Test topshirish vaqti
   - Batafsil tahlil

### 3.4 Natijalarni tahlil qilish
1. Controller uchun:
   - Barcha testlar natijalari
   - Guruhlar bo'yicha statistika
   - Fanlar bo'yicha statistika
   - Individual talaba natijalari

2. O'qituvchi uchun:
   - O'z fanlari bo'yicha natijalar
   - Guruhlar kesimida natijalar
   - Savollar bo'yicha statistika

## 4. MODELLAR TUZILISHI VA ALOQALARI

### 4.1 User (Foydalanuvchi)
- Asosiy ma'lumotlar (username, password)
- Role (admin, controller, teacher, student, tutor, employee)
- Guruh/Kafedra/Bo'lim ga bog'lanish
- Access code (talaba, tutor, xodim uchun)

### 4.2 GroupSubject (Guruh fanlari)
- Guruh va fan o'rtasidagi bog'lanish
- Semestr ma'lumoti
- Unique constraint orqali takrorlanishni oldini olish

### 4.3 Test
- Guruh/Kafedra/Bo'lim ga bog'lanish
- Fan
- Parametrlar (savol soni, ball, vaqt)
- Yaratuvchi (Controller)
- Faollik holati

### 4.4 Question (Savol)
- Fan
- Savol turi
- Matn
- Rasm (ixtiyoriy)
- Yaratuvchi (O'qituvchi)

### 4.5 StudentTest (Talaba testi)
- Talaba
- Test
- Boshlangan va tugagan vaqt
- Ball
- Holat (tugatilgan/tugatilmagan)

## 5. XAVFSIZLIK VA RUXSATLAR

### 5.1 Autentifikatsiya
- Login/parol orqali kirish
- Talabalar uchun access code
- JWT token asosida API autentifikatsiya

### 5.2 Avtorizatsiya
- Har bir rol uchun alohida ruxsatlar
- View-based permissions
- Model-based permissions

### 5.3 Ma'lumotlar xavfsizligi
- Test javoblarini shifrlash
- SQL injection himoyasi
- XSS himoyasi

## 6. FRONTENDNING ASOSIY XUSUSIYATLARI

### 6.1 Responsive dizayn
- Barcha qurilmalarga moslashuvchan interfeys
- Bootstrap framework
- CSS3 animatsiyalar

### 6.2 Dinamik filterlar
- AJAX orqali real-time filtrlash
- Select elementlarni dinamik yangilash
- Ma'lumotlarni live yuklash

### 6.3 Form validatsiya
- Frontend validatsiya (JavaScript)
- Backend validatsiya (Django)
- Xato xabarlarni ko'rsatish

## 7. TIZIM ARXITEKTURASI

### 7.1 Backend
- Django framework
- Django REST framework
- PostgreSQL ma'lumotlar bazasi

### 7.2 API endpoints
- RESTful API
- JWT autentifikatsiya
- Versiyalash

### 7.3 File storage
- Media fayllar (rasmlar)
- Static fayllar (CSS, JavaScript)

## 8. LOGGING VA MONITORING

### 8.1 User actions logging
- Barcha muhim harakatlarni qayd qilish
- Xatolarni logging qilish
- Audit trail

### 8.2 Performance monitoring
- Response time tracking
- Error rate monitoring
- Resource usage tracking

## 9. XULOSA

Bu tizim o'quv jarayonini avtomatlashtirish va nazorat qilish uchun yaratilgan bo'lib, quyidagi asosiy afzalliklarga ega:
- Roles-based access control
- Flexible test management
- Real-time monitoring
- Comprehensive reporting
- Secure data handling
